<?xml version="1.0"?>
<launch>
    <!-- MAVROS posix SITL environment launch script -->
    <!-- launches Gazebo environment and MAVROS, PX4 SITL, and spawns vehicle -->
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="iris"/>
    <arg name="world" default="$(find mavlink_sitl_gazebo)/worlds/empty.world"/>
    <!-- gazebo configs -->
    <arg name="gui" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="gcs" default="udp://@127.0.0.1"/>

    <!-- Gazebo sim -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
	    <arg name="use_sim_time" value="false"/>
    </include>

    <!-- drone0 -->
    <group ns="drone0">
        <!-- MAVROS and vehicle configs -->
        <arg name="ID" value="0"/>
        <arg name="fcu_url" default="udp://:14540@localhost:14580"/>
	    <arg name="xid" value="drone0"/>

        <!-- PX4 SITL and vehicle spawn -->
        <!-- enu frame -->
        <include file="$(find px4)/launch/single_vehicle_spawn.launch">
            <arg name="x" value="0"/>
            <arg name="y" value="1"/>
            <arg name="z" value="0"/>
            <arg name="R" value="0"/>
            <arg name="P" value="0"/>
            <arg name="Y" value="1.57"/>
            <arg name="vehicle" value="$(arg vehicle)"/>
            <arg name="mavlink_udp_port" value="14560"/>
            <arg name="mavlink_tcp_port" value="4560"/>
            <arg name="ID" value="$(arg ID)"/>
            <!-- <arg name="gst_udp_port" value="$(eval 5600 + arg('ID'))"/> -->
            <!-- <arg name="video_uri" value="$(eval 5600 + arg('ID'))"/> -->
            <!-- <arg name="mavlink_cam_udp_port" value="$(eval 14530 + arg('ID'))"/> -->
        </include>
        <!-- Mavros -->
        <include file="$(find mavros)/launch/px4.launch">
            <arg name="fcu_url" value="$(arg fcu_url)"/>
            <arg name="gcs_url" value="$(arg gcs)"/>
            <arg name="tgt_system" value="$(eval 1 + arg('ID'))"/>
            <arg name="tgt_component" value="1"/>
        </include>

        
        <arg name="id" value="drone0"/>
        <arg name="max_velocity" value="3.0"/>
        <arg name="order" value="5"/>
        <arg name="knot_division" value="5"/>
        <arg name="command_rate" value="20"/>
        <arg name="sensor_range" value="6.0"/>

	    <!-- PX4 Bspline Trajectory Manager -->
	    <node pkg="pbtm" type="pbtm_node" name="pbtm_node" output="screen">
            <param name="agent_id" value="$(arg id)"/>
            <param name="send_command_rate" value="$(arg command_rate)"/>
            <param name="timeout" value="0.5"/>
            <param name="takeoff_height" value="1.3"/>
            <!-- nwu frame -->
            <rosparam param="global_start_position">[0.0, 0.0, 0.0]</rosparam>
            <rosparam param="height_range">[1.0, 2.0]</rosparam>
            <param name="yaw_offset_rad" value="0.0"/>
            <param name="order" value="$(arg order)"/>
            <param name="max_velocity" value="$(arg max_velocity)"/>
            <param name="knot_division" value="$(arg knot_division)"/>
            <param name="bypass_timeout" value="2.0"/>
            <param name="takeoff_land_velocity" value="0.3"/>
        </node>

        <!-- FOALME -->
        <node pkg="bs_trajectory_ros" type="bs_trajectory_ros_node" name="bs_trajectory_ros_node" output="screen">
            <param name="agent_id" value="$(arg id)"/>
            <param name="odom_or_pose" value="pose"/>

            <param name="traj_opt_update_hz" value="1.5"/>
            <param name="cmd_update_hz" value="$(arg command_rate)"/>

            <!-- Bspline parameters -->
            <param name="traj_duration_secs" value="8.0"/>
            <param name="order" value="$(arg order)"/>
            <param name="des_knot_div" value="$(arg knot_division)"/>
            <param name="max_velocity" value="$(arg max_velocity)"/>

            <!-- RRT parameters -->
            <param name="runtime_error" value="0.12"/>
            <param name="sub_runtime_error" value="0.02"/>
            <param name="search_radius" value="$(arg sensor_range)"/>
            <param name="threshold" value="0.3"/>
            <param name="search_interval" value="7.0"/>

            <param name="xybuffer" value="1.0"/>
            <param name="zbuffer" value="1.0"/>
            <param name="passage_size" value="12.0"/>

            <rosparam param="height">[1.0, 2.0]</rosparam>

            <!-- Optimization parameters -->
            <param name="weight_smooth" value="5.0"/>
            <param name="weight_feas" value="5.0"/>
            <param name="weight_static" value="2.5"/>
            <param name="weight_reci" value="7.0"/>
            <param name="max_acc" value="0.3"/>

        </node>

        <!-- bsonic -->
        <node pkg="bsonic" type="bsonic_node" name="bsonic_node" output="screen">
            <param name="agent_id" value="$(arg id)"/>
            <!-- nwu frame -->
            <rosparam param="obstacles">
                [1.0, 2.0, 
                2.0, 0.0,
                -1.0, -2.0,
                1.0, -1.0]
            </rosparam>
            <rosparam param="height">[-0.2, 2.2]</rosparam>
            <param name="radius" value="0.3"/>
            <param name="resolution" value="0.1"/>
            <param name="cloud_publish_hz" value="5"/>
            <param name="sensor_range" value="$(arg sensor_range)"/>
        </node>


    </group>

    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find bsonic)/rviz/display.rviz" />
    
</launch>