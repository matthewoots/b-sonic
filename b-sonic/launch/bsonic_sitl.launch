<?xml version="1.0"?>
<launch>
    <!-- MAVROS posix SITL environment launch script -->
    <!-- launches Gazebo environment and MAVROS, PX4 SITL, and spawns vehicle -->
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/>
    <arg name="vehicle" default="iris"/>
    <arg name="world" default="$(find mavlink_sitl_gazebo)/worlds/empty.world"/>
    <!-- gazebo configs -->
    <arg name="gui" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="gcs" default="udp://@127.0.0.1"/>

    <!-- Gazebo sim -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
	    <arg name="use_sim_time" value="false"/>
    </include>

    <arg name="uav_idx" value="0"/>
    <!-- Planner: -->
    <!-- 0. foalme -->
    <!-- 1. plasto -->
    <arg name="use_planner" value="1"/>
    <arg name="protected_zone" value="0.2"/>
    <arg name="sensor_range" value="2.75"/>
    <arg name="sliding_map_size" value="$(eval 3.0 * arg('sensor_range'))"/>
    <arg name="planning_interval" value="0.15"/>
    <arg name="local_map_resolution" value="0.20"/>

    <!-- drone0 -->
    <group ns="drone$(arg uav_idx)">
        <!-- MAVROS and vehicle configs -->
        <arg name="fcu_url" default="udp://:14540@localhost:14580"/>
	    <arg name="xid" value="drone$(arg uav_idx)"/>

        <!-- PX4 SITL and vehicle spawn -->
        <!-- enu frame -->
        <include file="$(find px4)/launch/single_vehicle_spawn.launch">
            <arg name="x" value="0"/>
            <arg name="y" value="0"/>
            <arg name="z" value="0"/>
            <arg name="R" value="0"/>
            <arg name="P" value="0"/>
            <arg name="Y" value="-1.57"/>
            <!-- <arg name="Y" value="1.57"/> -->
            <arg name="vehicle" value="$(arg vehicle)"/>
            <arg name="mavlink_udp_port" value="14560"/>
            <arg name="mavlink_tcp_port" value="4560"/>
            <arg name="ID" value="$(arg uav_idx)"/>
            <!-- <arg name="gst_udp_port" value="$(eval 5600 + arg('ID'))"/> -->
            <!-- <arg name="video_uri" value="$(eval 5600 + arg('ID'))"/> -->
            <!-- <arg name="mavlink_cam_udp_port" value="$(eval 14530 + arg('ID'))"/> -->
        </include>
        <!-- Mavros -->
        <include file="$(find mavros)/launch/px4.launch">
            <arg name="fcu_url" value="$(arg fcu_url)"/>
            <arg name="gcs_url" value="$(arg gcs)"/>
            <arg name="tgt_system" value="$(eval 1 + arg('uav_idx'))"/>
            <arg name="tgt_component" value="1"/>
        </include>
        
        <arg name="id" value="drone$(arg uav_idx)"/>
        <arg name="max_velocity" value="5.0"/>
        <arg name="order" value="5"/>
        <arg name="knot_division" value="5"/>
        <arg name="command_rate" value="15"/>

	    <!-- PX4 Bspline Trajectory Manager -->
	    <node pkg="pbtm" type="pbtm_node" name="pbtm_node" output="screen">
            <param name="agent_id" value="$(arg id)"/>
            <param name="send_command_rate" value="$(arg command_rate)"/>
            <param name="timeout" value="0.5"/>
            <param name="takeoff_height" value="1.3"/>
            <!-- nwu frame -->
            <rosparam param="global_start_position">[1.5, -1.5, 0.0]</rosparam>
            <rosparam param="height_range">[1.0, 2.0]</rosparam>
            <param name="yaw_offset_rad" value="0.0"/>
            <param name="order" value="$(arg order)"/>
            <param name="max_velocity" value="$(arg max_velocity)"/>
            <param name="knot_division" value="$(arg knot_division)"/>
            <param name="bypass_timeout" value="2.0"/>
            <param name="takeoff_land_velocity" value="0.3"/>
            <param name="use_px4ctrl" value="true"/>

            <!-- for iris only -->
            <param name="normalizedthrust_constant" value="0.02"/>
            <param name="normalizedthrust_offset" value="0.01"/>
            <param name="attctrl_constant" value="0.3"/>
            <param name="gains/p_x" value = "1.0"/>
            <param name="gains/p_y" value = "1.0"/>
            <param name="gains/p_z" value = "1.0"/>
            <param name="gains/v_x" value = "1.0"/>
            <param name="gains/v_y" value = "1.0"/>
            <param name="gains/v_z" value = "1.0"/>
            
            <!-- F = m_a * u ^ 2 + m_b * u + c -->
            <!-- u is the normalized pwm command (1000~2000 -> 0~1) -->
            <!-- measured for 1404 at 11.1v -->
            <param name="m_a" value = "202.33"/>
            <param name="m_b" value = "145.56"/>
            <param name="m_c" value = "-8.0219"/>

            <!-- Ratio = actual_command/computed_command = volt_k * voltage + volt_b -->
            <param name="volt_k" value = "-0.1088"/>
            <param name="volt_b" value = "2.1964"/>

            <param name="throttle_offset" value = "0.06"/>
            <param name="throttle_limit" value = "0.3"/>

            <!-- mass of vehicle in grams -->
            <param name="mass" value="199"/>

            <param name="use_yawTarget" value = "false"/>
            <param name="max_acc" value = "10.0" />
            <param name="voltage_compensation" value = "true"/>

        </node>

        <!-- FOALME -->
        <node if="$(eval arg('use_planner') == 0)" 
            pkg="bs_trajectory_ros" type="bs_trajectory_ros_node" 
            name="bs_trajectory_ros_node" output="screen">

            <param name="agent_id" value="$(arg id)"/>
            <param name="odom_or_pose" value="pose"/>

            <param name="traj_opt_update_hz" value="2.0"/>
            <param name="cmd_update_hz" value="$(arg command_rate)"/>

            <!-- Bspline parameters -->
            <param name="traj_duration_secs" value="8.0"/>
            <param name="order" value="$(arg order)"/>
            <param name="des_knot_div" value="$(arg knot_division)"/>
            <param name="max_velocity" value="$(arg max_velocity)"/>

            <!-- RRT parameters -->
            <param name="runtime_error" value="0.12"/>
            <param name="sub_runtime_error" value="0.02"/>
            <param name="search_radius" value="$(arg sensor_range)"/>
            <param name="threshold" value="0.4"/>
            <param name="search_interval" value="7.0"/>

            <param name="xybuffer" value="1.0"/>
            <param name="zbuffer" value="1.0"/>
            <param name="passage_size" value="2.5"/>
            <!-- <param name="passage_size" value="4.0"/> -->

            <rosparam param="height">[1.0, 1.6]</rosparam>

            <!-- Optimization parameters -->
            <param name="weight_smooth" value="5.0"/>
            <param name="weight_feas" value="5.0"/>
            <param name="weight_static" value="2.5"/>
            <param name="weight_reci" value="7.0"/>
            <param name="max_acc" value="0.3"/>

        </node>

        <node if="$(eval arg('use_planner') == 1)" 
            pkg="plasto" type="plasto_node" 
            name="plasto_node" output="screen">

            <remap from="/$(arg xid)/plasto_node/map" 
                to="/$(arg xid)/local_pcl"/>
            <remap from="/$(arg xid)/plasto_node/pose" 
                to="/$(arg xid)/uav/nwu"/>
            <remap from="/$(arg xid)/plasto_node/goal" 
                to="/$(arg xid)/goal"/>
            <remap from="/$(arg xid)/plasto_node/command" 
                to="/$(arg xid)/bypass"/>

            <param name="ros/simulation" value="false"/>
            <param name="ros/have_global_cloud" value="true"/>
            <param name="ros/using_enu" value="false"/>
            <param name="planning/sample_tree" value="true"/>

            <param name="ros/threads" value="3"/>
            <param name="ros/simulation_step" value="30"/>
            <param name="ros/map_hz" value="15"/>

            <param name="sliding_map/size" value="$(arg sliding_map_size)"/>

            <param name="planning/runtime_error" value="0.0050"/>
            <param name="planning/refinement_time" value="0.002"/>
            <param name="planning/sensor_range" value="$(arg sensor_range)"/>
            <param name="planning/sensor_buffer_multiplier" value="0.75"/>
            <param name="planning/interval" value="$(arg planning_interval)"/>
            <param name="planning/resolution" value="$(arg protected_zone)"/>
            <rosparam param="planning/search_limit_hfov"> [0.05, 0.95] </rosparam>
            <rosparam param="planning/search_limit_vfov"> [0.10, 0.90] </rosparam>
            <param name="planning/scaled_min_dist_from_node" value="0.10"/>
            <rosparam param="planning/height"> [1.2, 1.60] </rosparam>
            <rosparam param="planning/no_fly_zone"> 
                [2, 10, -10, 10,
                -10, 10, -10, -2,
                -10, -2, -10, 10,
                -10, 10, 2, 10] 
            </rosparam>

            <param name="map/resolution" value="$(arg local_map_resolution)"/>
            <param name="map/size" value="5"/>
            <param name="map/vfov" value="1.40"/>
            <param name="map/hfov" value="2.6"/>
            <param name="sliding_map/distance_threshold" value="2.0"/>

            <param name="amtraj/weight/time_regularization" value="1024.0"/>
            <param name="amtraj/weight/acceleration" value="20.0"/> 
            <!-- 15.0 -->
            <param name="amtraj/weight/jerk" value="4.0"/>
            <!-- 0.6 -->
            <param name="amtraj/limits/max_vel" value="4.00"/>
            <param name="amtraj/limits/max_acc" value="8.00"/>
            <param name="amtraj/limits/iterations" value="23"/>
            <param name="amtraj/limits/epsilon" value="0.2"/>

            <param name="safety/total_safety_horizon" value="0.8"/>
            <param name="safety/reached_threshold" value="0.1"/>

        </node>

        <!-- bsonic -->
        <node pkg="bsonic" type="bsonic_node" name="bsonic_node" output="screen">
            <param name="agent_id" value="$(arg id)"/>
            <!-- nwu frame -->
            <!-- <rosparam param="obstacles">
                [0.0, 0.50,
                -0.50, -0.5,
                -0.50, -2.0,
                -0.50, -3.0,
                -0.50, -4.0]
            </rosparam> -->
            <!-- <rosparam param="obstacles">
                [0.0, -0.20,
                0.0, 0.20]
            </rosparam> -->
            <rosparam param="obstacles">
                [0.0, -0.00]
            </rosparam>
            <rosparam param="height">[-0.2, 2.4]</rosparam>
            <param name="radius" value="0.20"/>
            <!-- <param name="radius" value="0.3"/> -->
            <param name="resolution" value="0.05"/>
            <param name="cloud_publish_hz" value="1"/>
            <param name="sensor_range" value="$(arg sensor_range)"/>
        </node>


    </group>

    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find bsonic)/rviz/display$(arg uav_idx).rviz" />
    
</launch>